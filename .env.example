# ShelfHelp AI Environment Variables
# Copy this file to .env and configure with your values

# === REQUIRED CONFIGURATION ===

# API Security (REQUIRED)
API_KEY=your_secure_api_key_for_ai_assistants_min_16_chars

# === FIREBASE CONFIGURATION (OPTIONAL - Enables real-time sync) ===

# Basic Firebase Configuration
FIREBASE_API_KEY=your_firebase_api_key
FIREBASE_AUTH_DOMAIN=your_project.firebaseapp.com
FIREBASE_DATABASE_URL=https://your_project-default-rtdb.firebaseio.com
FIREBASE_PROJECT_ID=your_project_id

# Firebase Admin SDK (Production) - Choose ONE method:
# Method 1: Service Account File (Recommended for local development)
# GOOGLE_APPLICATION_CREDENTIALS=/secure/path/to/firebase-service-account.json

# Method 2: Direct Environment Variables (Recommended for cloud deployment)
# FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\n...\n-----END PRIVATE KEY-----\n"
# FIREBASE_CLIENT_EMAIL=firebase-adminsdk-xxxxx@your_project.iam.gserviceaccount.com

# === GOODREADS INTEGRATION (OPTIONAL - Enables preference learning) ===

# Goodreads RSS Feed for Automated Preference Learning
GOODREADS_RSS_URL=https://www.goodreads.com/review/list_rss/YOUR_USER_ID?key=YOUR_RSS_KEY&shelf=read

# === SYSTEM CONFIGURATION (OPTIONAL) ===

# Logging Configuration
LOG_LEVEL=info
NODE_ENV=development

# === WEB SCRAPING APPROACH ===
# ShelfHelp AI uses web scraping for all availability checking:
# - Kindle Unlimited: Amazon search scraping
# - Hoopla: Public catalog scraping  
# - Libraries: OverDrive catalog scraping
# - No API credentials required for core functionality

# === CONFIGURATION VALIDATION ===
# After setting up your environment variables, test the configuration:
# 1. Copy this file to .env
# 2. Configure your values above
# 3. Run: npm run test-config (or node src/core/config-manager.js)
# 4. Check for validation errors and warnings

# === SERVICE CAPABILITIES BY CONFIGURATION ===
# Minimum (API_KEY only):
#   - Book management and classification
#   - Queue management and recommendations  
#   - Availability checking via web scraping:
#     * Kindle Unlimited (Amazon search)
#     * Hoopla (public search)
#     * Libraries (OverDrive catalogs)
#
# With Firebase:
#   + Real-time sync across devices
#   + Enhanced preference analytics
#
# With Goodreads RSS:
#   + Automated preference learning
#   + Reading completion tracking
#
# Web Scraping Features:
#   + No API rate limits or API key requirements
#   + Robust error handling and retry logic
#   + Multiple library system support
#   + Advanced validation and confidence scoring